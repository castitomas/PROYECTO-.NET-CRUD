@page "/listadoEstudiantes"
@inject ListarEstudiantesUseCase ListarEstudiantesUseCase
@inject ListarEstudiantesFinalizoUseCase ListarEstudiantesFinalizoUseCase
@inject ListarEstudiantesSinFinalizarUseCase ListarEstudiantesSinFinalizarUseCase
@inject IJSRuntime JsRuntime
@inject EliminarEstudianteUseCase EliminarEstudianteUseCase
@inject NavigationManager Navegador

<h2> Listado Completo Estudiantes </h2>

<table class = "table">
    <thead>
        <tr>
            <th> ID </th>
            <th> NOMBRE </th>
            <th> APELLIDO </th>
            <th> DNI </th>
            <th> EMAIL </th>
            <th> ACCIÓN </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var est in _lista)
        {
            <tr>
                <td>@est._estudianteId</td>
                <td>@est.Nombre</td>
                <td>@est.Apellido</td>
                <td>@est.DNI</td>
                <td>@est.Email</td>
                <td>
                    <button class="btn btn-primary"
                            @onclick="()=>ModificarEstudiante(est._estudianteId)">
                        <i class= "oi oi-pencil"></i>
                    </button>
                    <button class="btn btn-danger"
                            @onclick="()=>EliminarEstudiante(est._estudianteId)">
                        <i class="oi oi-trash"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<h3> Estudiantes que han finalizado algún curso. </h3>  

<table class = "table">
    <thead>
        <tr>
            <th> Nombre </th>
            <th> Apellido </th>
            <th> Título del Curso </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var aux in _listaAuxiliarUno)
        {
            <tr>
                <th> @aux.NombreEstudiante </th>
                <th> @aux.ApellidoEstudiante </th>
                <th> @aux.TituloCurso </th>
            </tr>
        }
    </tbody>
</table>

<h3> Estudiantes que estan realizando algún curso actualmente. </h3>  

<table class = "table">
    <thead>
        <tr>
            <th> Nombre </th>
            <th> Apellido </th>
            <th> Título del Curso </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var aux in _listaAuxiliarDos)
        {
            <tr>
                <th> @aux.NombreEstudiante </th>
                <th> @aux.ApellidoEstudiante </th>
                <th> @aux.TituloCurso </th>
            </tr>
        }
    </tbody>
</table>

@code 
{
    List<Estudiante> _lista = new List<Estudiante>();
    List<Auxiliar> _listaAuxiliarUno = new List<Auxiliar>();
    List<Auxiliar> _listaAuxiliarDos = new List<Auxiliar>();
    protected override void OnInitialized()
    {
        _lista = ListarEstudiantesUseCase.Ejecutar();
        _listaAuxiliarUno = ListarEstudiantesFinalizoUseCase.Ejecutar();
        _listaAuxiliarDos = ListarEstudiantesSinFinalizarUseCase.Ejecutar();
    }
    async Task EliminarEstudiante(int id)
    {
        bool confirmado = await JsRuntime.InvokeAsync<bool>("confirm", $"Desea eliminar el estudiante {id}?");
        
        if (confirmado)
        {
            EliminarEstudianteUseCase.Ejecutar(id);
            _lista = ListarEstudiantesUseCase.Ejecutar();
        }
    }

    void ModificarEstudiante(int id)
    {
        Navegador.NavigateTo($"estudiante/{id}");
    }
}